{"version":3,"file":"static/js/387.36dab327.chunk.js","mappings":"iPAEaA,EAAaC,EAAAA,EAAAA,GAAH,4EAMVC,EAAaD,EAAAA,EAAAA,IAAH,yC,SCHR,SAASE,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAKR,OAHAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,EAAS,WAAWI,MAAK,SAAAC,GAAI,OAAIN,EAAQM,EAAKP,KAAjB,GAC9C,GAAE,CAACE,KAEF,SAACP,EAAD,UACGK,EAAKQ,KAAI,SAAAC,GACR,IAAQC,EAA2CD,EAA3CC,QAASC,EAAkCF,EAAlCE,aAAcC,EAAoBH,EAApBG,UAAWC,EAASJ,EAATI,KAC1C,OACE,2BACE,SAAChB,EAAD,CAAYiB,IAAG,UAVV,mCAUU,OAAcH,GAAgBI,IAAKH,KAClD,uBAAIC,KACJ,uCAAeD,OAHRF,EAMZ,KAGN,C,uKCxBKM,EAAe,gDACfC,EAAqB,sCACrBC,EAAuB,mDACvBC,EAAU,CACdC,OAAQ,CACNC,QAAS,qCAIN,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACcC,EAAAA,EAAAA,IACZP,EAAcG,GAClBb,MAAK,SAAAkB,GAAQ,OAAIA,EAASjB,IAAb,IAHX,cACCA,EADD,yBAIEA,GAJF,kEAOA,SAAekB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BvB,GAA5B,uFACcqB,EAAAA,EAAAA,IACZN,EAAqBf,EAASiB,GAClCb,MAAK,SAAAkB,GAAQ,OAAIA,EAASjB,IAAb,IAHX,cACCA,EADD,yBAIEA,GAJF,kEAOA,SAAemB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACcJ,EAAAA,EAAAA,IACZL,EAAuBS,EAAWR,GACtCb,MAAK,SAAAkB,GAAQ,OAAIA,EAASjB,IAAb,IAHX,cACCA,EADD,yBAIEA,GAJF,kEAOA,SAAeF,EAAtB,iDAAO,OAAP,oBAAO,WAA+BH,EAAS0B,GAAxC,uFACcL,EAAAA,EAAAA,IACZN,EAAqBf,EAArB,WAAmC0B,GAAQT,GAC/Cb,MAAK,SAAAkB,GAAQ,OAAIA,EAASjB,IAAb,IAHX,cACCA,EADD,yBAIEA,GAJF,kE","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","utils/GetDataFromAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ActorsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\n\nexport const ActorPhoto = styled.img`\n  width: 200px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'utils/GetDataFromAPI';\nimport { ActorPhoto, ActorsList } from './Cast.styled';\n\nexport default function MovieCast() {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  const imgURL = 'https://image.tmdb.org/t/p/w500';\n  useEffect(() => {\n    getMovieDetails(movieId, 'credits').then(data => setCast(data.cast));\n  }, [movieId]);\n  return (\n    <ActorsList>\n      {cast.map(actor => {\n        const { cast_id, profile_path, character, name } = actor;\n        return (\n          <li key={cast_id}>\n            <ActorPhoto src={`${imgURL}${profile_path}`} alt={character} />\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        );\n      })}\n    </ActorsList>\n  );\n}\n","import axios from 'axios';\n\nconst TRENDING_URL = 'https://api.themoviedb.org/3/trending/all/day';\nconst MOVIE_SEARCH_BY_ID = 'https://api.themoviedb.org/3/movie/';\nconst MOVIE_SEARCH_BY_NAME = 'https://api.themoviedb.org/3/search/movie?query=';\nconst options = {\n  params: {\n    api_key: 'e5d9357826e56bc41f11884e07241fb9',\n  },\n};\n\nexport async function getTrendingsFromAPI() {\n  const data = await axios\n    .get(TRENDING_URL, options)\n    .then(response => response.data);\n  return data;\n}\n\nexport async function getMovieById(movieId) {\n  const data = await axios\n    .get(MOVIE_SEARCH_BY_ID + movieId, options)\n    .then(response => response.data);\n  return data;\n}\n\nexport async function getMovieByName(movieName) {\n  const data = await axios\n    .get(MOVIE_SEARCH_BY_NAME + movieName, options)\n    .then(response => response.data);\n  return data;\n}\n\nexport async function getMovieDetails(movieId, path) {\n  const data = await axios\n    .get(MOVIE_SEARCH_BY_ID + movieId + `/${path}`, options)\n    .then(response => response.data);\n  return data;\n}\n"],"names":["ActorsList","styled","ActorPhoto","MovieCast","useState","cast","setCast","movieId","useParams","useEffect","getMovieDetails","then","data","map","actor","cast_id","profile_path","character","name","src","alt","TRENDING_URL","MOVIE_SEARCH_BY_ID","MOVIE_SEARCH_BY_NAME","options","params","api_key","getTrendingsFromAPI","axios","response","getMovieById","getMovieByName","movieName","path"],"sourceRoot":""}