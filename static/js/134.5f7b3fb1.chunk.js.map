{"version":3,"file":"static/js/134.5f7b3fb1.chunk.js","mappings":"2LAGe,SAASA,EAAT,GAAyD,IAArCC,EAAoC,EAApCA,GAAIC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,UACxD,OACE,yBACE,SAAC,KAAD,CAAMC,MAAOD,EAAWE,GAAIH,EAA5B,gBACGF,QADH,IACGA,EAAAA,EAASC,KAFLF,EAMZ,C,qICNc,SAASO,IACtB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAQP,EAAaQ,IAAI,SACzBC,GAAcC,EAAAA,EAAAA,SAAO,IAE3BC,EAAAA,EAAAA,YAAU,WACJJ,GAAmB,KAAVA,GAAgBE,EAAYG,WACvCC,EAAAA,EAAAA,IAAeN,EAAMO,QAAQC,MAAK,SAAAC,GAAI,OAAIZ,EAAUY,EAAKC,QAAnB,IACtCR,EAAYG,SAAU,EAEzB,GAAE,CAACL,IAuBJ,OACE,iCACE,kBAAMW,SAZW,SAAAC,GACfA,GACFA,EAAEC,iBAGiB,KAAjBb,EAAMO,SAGVD,EAAAA,EAAAA,IAAeN,EAAMO,QAAQC,MAAK,SAAAC,GAAI,OAAIZ,EAAUY,EAAKC,QAAnB,GACvC,EAGG,WACE,kBAAOI,KAAK,OAAOC,SAxBH,SAAAH,GAChBV,EAAYG,UACdH,EAAYG,SAAU,GAExB,IAAQW,EAAUJ,EAAEK,cAAZD,MACR,GAAc,KAAVA,EACF,OAAOtB,EAAgB,CAAC,GAE1BA,EAAgB,CAAEM,MAAOgB,GAC1B,EAeiDA,MAAK,OAAEhB,QAAF,IAAEA,EAAAA,EAAS,MAC5D,mBAAQc,KAAK,SAAb,wBAEF,wBACGlB,EAAOsB,KAAI,SAAAC,GACV,IAAQnC,EAAoBmC,EAApBnC,GAAIC,EAAgBkC,EAAhBlC,MAAOC,EAASiC,EAATjC,KACnB,OACE,SAAC,IAAD,CACEE,UAAW,CAAEgC,KAAMtB,GACnBX,KAAI,UAAKH,GAETA,GAAIA,EACJC,MAAOA,EACPC,KAAMA,GAHDF,EAMV,QAIR,C,uKC9DKqC,EAAe,gDACfC,EAAqB,sCACrBC,EAAuB,mDACvBC,EAAU,CACdC,OAAQ,CACNC,QAAS,qCAIN,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACcC,EAAAA,EAAAA,IACZP,EAAcG,GAClBhB,MAAK,SAAAqB,GAAQ,OAAIA,EAASpB,IAAb,IAHX,cACCA,EADD,yBAIEA,GAJF,kEAOA,SAAeqB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACcH,EAAAA,EAAAA,IACZN,EAAqBS,EAASP,GAClChB,MAAK,SAAAqB,GAAQ,OAAIA,EAASpB,IAAb,IAHX,cACCA,EADD,yBAIEA,GAJF,kEAOA,SAAeH,EAAtB,+CAAO,OAAP,oBAAO,WAA8B0B,GAA9B,uFACcJ,EAAAA,EAAAA,IACZL,EAAuBS,EAAWR,GACtChB,MAAK,SAAAqB,GAAQ,OAAIA,EAASpB,IAAb,IAHX,cACCA,EADD,yBAIEA,GAJF,kEAOA,SAAewB,EAAtB,iDAAO,OAAP,oBAAO,WAA+BF,EAAS5C,GAAxC,uFACcyC,EAAAA,EAAAA,IACZN,EAAqBS,EAArB,WAAmC5C,GAAQqC,GAC/ChB,MAAK,SAAAqB,GAAQ,OAAIA,EAASpB,IAAb,IAHX,cACCA,EADD,yBAIEA,GAJF,kE","sources":["components/ListItem/ListItem.jsx","pages/Movies.jsx","utils/GetDataFromAPI.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport default function ListItem({ id, title, name, path, propState }) {\n  return (\n    <li key={id}>\n      <Link state={propState} to={path}>\n        {title ?? name}\n      </Link>\n    </li>\n  );\n}\n\nListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string,\n  name: PropTypes.string,\n  path: PropTypes.string.isRequired,\n};\n","import ListItem from 'components/ListItem/ListItem';\nimport { useEffect, useRef, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getMovieByName } from 'utils/GetDataFromAPI';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  const query = searchParams.get('query');\n  const firstRender = useRef(true);\n\n  useEffect(() => {\n    if (query && query !== '' && firstRender.current) {\n      getMovieByName(query.trim()).then(data => setMovies(data.results));\n      firstRender.current = false;\n    }\n  }, [query]);\n\n  const onInputChange = e => {\n    if (firstRender.current) {\n      firstRender.current = false;\n    }\n    const { value } = e.currentTarget;\n    if (value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: value });\n  };\n\n  const onFormSubmit = e => {\n    if (e) {\n      e.preventDefault();\n    }\n\n    if (query.trim() === '') {\n      return;\n    }\n    getMovieByName(query.trim()).then(data => setMovies(data.results));\n  };\n  return (\n    <>\n      <form onSubmit={onFormSubmit}>\n        <input type=\"text\" onChange={onInputChange} value={query ?? ''} />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {movies.map(movie => {\n          const { id, title, name } = movie;\n          return (\n            <ListItem\n              propState={{ from: location }}\n              path={`${id}`}\n              key={id}\n              id={id}\n              title={title}\n              name={name}\n            />\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst TRENDING_URL = 'https://api.themoviedb.org/3/trending/all/day';\nconst MOVIE_SEARCH_BY_ID = 'https://api.themoviedb.org/3/movie/';\nconst MOVIE_SEARCH_BY_NAME = 'https://api.themoviedb.org/3/search/movie?query=';\nconst options = {\n  params: {\n    api_key: 'e5d9357826e56bc41f11884e07241fb9',\n  },\n};\n\nexport async function getTrendingsFromAPI() {\n  const data = await axios\n    .get(TRENDING_URL, options)\n    .then(response => response.data);\n  return data;\n}\n\nexport async function getMovieById(movieId) {\n  const data = await axios\n    .get(MOVIE_SEARCH_BY_ID + movieId, options)\n    .then(response => response.data);\n  return data;\n}\n\nexport async function getMovieByName(movieName) {\n  const data = await axios\n    .get(MOVIE_SEARCH_BY_NAME + movieName, options)\n    .then(response => response.data);\n  return data;\n}\n\nexport async function getMovieDetails(movieId, path) {\n  const data = await axios\n    .get(MOVIE_SEARCH_BY_ID + movieId + `/${path}`, options)\n    .then(response => response.data);\n  return data;\n}\n"],"names":["ListItem","id","title","name","path","propState","state","to","Movies","useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","location","useLocation","query","get","firstRender","useRef","useEffect","current","getMovieByName","trim","then","data","results","onSubmit","e","preventDefault","type","onChange","value","currentTarget","map","movie","from","TRENDING_URL","MOVIE_SEARCH_BY_ID","MOVIE_SEARCH_BY_NAME","options","params","api_key","getTrendingsFromAPI","axios","response","getMovieById","movieId","movieName","getMovieDetails"],"sourceRoot":""}